library(MASS)
library(readr)
library(caret)
library(ggplot2)
library(lubridate)

setwd("E:")
train<-read_csv("sf_train.csv")
test<-read_csv("sf_test.csv")
head(train)

#time function
make_feature<-function(df){
Dates1<-strptime(as.character(df$Dates),"%Y-%m-%d %H:%M:%S")
df$Year<-year(Dates1)
df$Month<-month(Dates1)
df$Hour<-hour(Dates1)
return(df)
}

train<-make_feature(train)
head(train)
test<-make_feature(test)
head(test)

submission<-data.frame(Id=test$Id)
response<-data.frame(Cat=train$Category)
#此处用unique将犯罪种类去重
crime<-as.character(unique(train$Category))   
crime<-sort(crime)

#设置循环
for(i in crime){
     response[,i]<-0
    response[,i][response$Cat==i]<-1
    fit<-glm(response[,i]~PdDistrict+DayOfWeek+Year+Month+Hour+X:Y,
         data=train,family=binomial)
    pred<-predict(fit,test,type="response")
    submission[i]<-pred
}

head(submission)
write.csv(submission,"submission_criminal.csv",row.names=F)

#可视化
map<-get_map("San Francisco",zoom=12,color="bw")
plot(map)

map_crime<-function(crime_df,crime){
    filtered<-filter(crime_df,Category %in% crime)
    plot<-ggmap("San Francisco",zoom=12,color="bw",extent='device')
            +geom_point(data=filtered,aes(x=X,y=Y,color=Category),alpha=0.6)
    return(plot)
}
map_crime(train,c('SUICIDE','ARSON'))










